(require
  '[clojure.spec.alpha :as s]
  '[com.walmartlabs.lacinia :as g]
  '[com.walmartlabs.lacinia.schema :as schema])

(import
  java.text.SimpleDateFormat
  java.util.Date)

(def date-formatter
  "Used by custom scalar :Date."
  (SimpleDateFormat. "yyyy-MM-dd"))

(def schema
  (schema/compile
    {:scalars
     {:Date
      {:parse #(when (string? %)
                 (try
                   (.parse date-formatter %)
                   (catch Throwable _
                     nil)))
       :serialize #(try
                     (.format date-formatter %)
                     (catch Throwable _
                       nil))}}

     :queries
     {:today
      {:type :Date
       :resolve (fn [ctx args v] (Date.))}
      :echo
      {:type :Date
       :args {:input {:type :Date}}
       :resolve (fn [ctx {:keys [input]} v] input)}}}))

(g/execute schema "{today}" nil nil)
=> {:data {:today "2018-11-21"}}
(g/execute schema "{ echo(input: \"2018-11-22\") }" nil nil)
=> {:data {:echo "2018-11-22"}}
(g/execute schema "{ echo(input: \"thanksgiving\") }" nil nil)
=>
{:errors [{:message "Exception applying arguments to field `echo': For argument `input', unable to convert \"thanksgiving\" to scalar type `Date'.",
           :locations [{:line 1, :column 3}],
           :extensions {:field :echo, :argument :input, :value "thanksgiving", :type-name :Date}}]}

