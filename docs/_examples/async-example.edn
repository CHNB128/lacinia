(require
  '[com.walmartlabs.lacinia.resolve :as resolve])

(defn ^:private get-user
  [connection user-id]
  ...)

(defn resolve-user
  [context args _]
  (let [{:keys [id]} args
        {:keys [connection]} context
        result (resolve/resolve-promise)]
    (.start (Thread.
            #(try
              (resolve/deliver! result (get-user connection id))
              (catch Throwable t
                (resolve/deliver! result nil
                  {:message (str "Exception: " (.getMessage t))})))))

    result))
